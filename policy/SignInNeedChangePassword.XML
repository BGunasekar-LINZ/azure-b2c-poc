<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Collecti User input-->
<TrustFrameworkPolicy
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06"
    PolicySchemaVersion="0.3.0.0"
    TenantId="devoio.onmicrosoft.com"
    PolicyId="B2C_1A_NeedChangePasswordCustomPolicy"
    PublicPolicyUri="http://yourtenant.onmicrosoft.com/B2C_1A_NeedChangePasswordCustomPolicy">

    <BuildingBlocks>
        <!-- Building Blocks Here-->
        <ClaimsSchema>
            <ClaimType Id="objectId">
                <DisplayName>unique object Id for subject of the claims being returned</DisplayName>
                <DataType>string</DataType>
            </ClaimType>

            <ClaimType Id="identityProvider">
                <DisplayName>name of the identity provider</DisplayName>
                <DataType>string</DataType>
            </ClaimType>

            <ClaimType Id="authenticationSource">
                <DisplayName>how user authenticated</DisplayName>
                <DataType>string</DataType>
            </ClaimType>

            <ClaimType Id="issuerUserId">
                <DisplayName>user id provided by the idp</DisplayName>
                <DataType>string</DataType>
            </ClaimType>

            <ClaimType Id="message">
                <DisplayName>Will hold Hello World message</DisplayName>
                <DataType>string</DataType>
            </ClaimType>

            <ClaimType Id="givenName">
                <DisplayName>Given Name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your given name (also known as first name).</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>

            <ClaimType Id="surname">
                <DisplayName>Surname</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your surname (also known as family name or last name).</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>

            <ClaimType Id="displayName">
                <DisplayName>Display Name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your display name.</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>

            <ClaimType Id="userName">
                <DisplayName>User Name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>LINZ user name.</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>

            <ClaimType Id="password">
                <DisplayName>Password</DisplayName>
                <DataType>string</DataType>
                <AdminHelpText>Enter password</AdminHelpText>
                <UserHelpText>LINZ password.</UserHelpText>
                <UserInputType>Password</UserInputType>
                <PredicateValidationReference Id="StrongPassword" />
            </ClaimType>

            <ClaimType Id="email">
                <DisplayName>Email Address</DisplayName>
                <DataType>string</DataType>
                <DefaultPartnerClaimTypes>
                    <Protocol Name="OpenIdConnect" PartnerClaimType="email" />
                </DefaultPartnerClaimTypes>
                <UserHelpText>Your email address. </UserHelpText>
                <UserInputType>TextBox</UserInputType>
                <Restriction>
                    <Pattern
                        RegularExpression="^[a-zA-Z0-9.!#$%&amp;&apos;^_`{}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$"
                        HelpText="Please enter a valid email address something like maurice@contoso.com" />
                </Restriction>
            </ClaimType>

            <ClaimType Id="userPrincipalName">
                <DisplayName>UserPrincipalName</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your user name as stored in the Azure Active Directory.</UserHelpText>
            </ClaimType>

            <ClaimType Id="passwordPolicies">
                <DisplayName>Password Policies</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Password policies used by Azure AD to determine password strength,
                    expiry etc.</UserHelpText>
            </ClaimType>

            <ClaimType Id="displayButton">
                <DisplayName>Display Button</DisplayName>
                <DataType>string</DataType>
                <UserInputType>Button</UserInputType>
            </ClaimType>

            <ClaimType Id="oldPassword">
                <DisplayName>Old Password</DisplayName>
                <DataType>string</DataType>
                <AdminHelpText>Enter old password</AdminHelpText>
                <UserHelpText>LINZ old password.</UserHelpText>
                <UserInputType>Password</UserInputType>
                <PredicateValidationReference Id="StrongPassword"/>
            </ClaimType>

            <ClaimType Id="newPassword">
                <DisplayName>New Password</DisplayName>
                <DataType>string</DataType>
                <AdminHelpText>Enter new password</AdminHelpText>
                <UserHelpText>LINZ new password.</UserHelpText>
                <UserInputType>Password</UserInputType>
                <PredicateValidationReference Id="StrongPassword"/>
            </ClaimType>

            <ClaimType Id="confirmPassword">
                <DisplayName>Confirm Password</DisplayName>
                <DataType>string</DataType>
                <AdminHelpText>Enter confirm password</AdminHelpText>
                <UserHelpText>LINZ confirm password.</UserHelpText>
                <UserInputType>Password</UserInputType>
                <PredicateValidationReference Id="StrongPassword"/>
            </ClaimType>

            <ClaimType Id="status">         
                <DataType>string</DataType>
            </ClaimType>

            <ClaimType Id="passwordUpdated">
                <DataType>boolean</DataType>
            </ClaimType>

            <ClaimType Id="needChangePassword">
                <DataType>boolean</DataType>
            </ClaimType>
        </ClaimsSchema>

        <Predicates>
            <Predicate Id="IsLengthBetween8And64" Method="IsLengthRange"
                HelpText="The password must be between 8 and 64 characters.">
                <Parameters>
                    <Parameter Id="Minimum">8</Parameter>
                    <Parameter Id="Maximum">64</Parameter>
                </Parameters>
            </Predicate>

            <Predicate Id="Lowercase" Method="IncludesCharacters" HelpText="a lowercase letter">
                <Parameters>
                    <Parameter Id="CharacterSet">a-z</Parameter>
                </Parameters>
            </Predicate>

            <Predicate Id="Uppercase" Method="IncludesCharacters" HelpText="an uppercase letter">
                <Parameters>
                    <Parameter Id="CharacterSet">A-Z</Parameter>
                </Parameters>
            </Predicate>

            <Predicate Id="Number" Method="IncludesCharacters" HelpText="a digit">
                <Parameters>
                    <Parameter Id="CharacterSet">0-9</Parameter>
                </Parameters>
            </Predicate>

            <Predicate Id="Symbol" Method="IncludesCharacters" HelpText="a symbol">
                <Parameters>
                    <Parameter Id="CharacterSet">@#$%^&amp;*\-_+=[]{}|\\:',.?/`~"();!</Parameter>
                </Parameters>
            </Predicate>

            <Predicate Id="PIN" Method="MatchesRegex" HelpText="The password must be numbers only.">
                <Parameters>
                    <Parameter Id="RegularExpression">^[0-9]+$</Parameter>
                </Parameters>
            </Predicate>

            <Predicate Id="AllowedAADCharacters" Method="MatchesRegex"
                HelpText="An invalid character was provided.">
                <Parameters>
                    <Parameter Id="RegularExpression">(^([0-9A-Za-z\d@#$%^&amp;*\-_+=[\]{}|\\:',?/`~"();!
                        ]|(\.(?!@)))+$)|(^$)</Parameter>
                </Parameters>
            </Predicate>

            <Predicate Id="DisallowedWhitespace" Method="MatchesRegex"
                HelpText="The password must not begin or end with a whitespace character.">
                <Parameters>
                    <Parameter Id="RegularExpression">(^\S.*\S$)|(^\S+$)|(^$)</Parameter>
                </Parameters>
            </Predicate>
        </Predicates>

        <PredicateValidations>
            <PredicateValidation Id="SimplePassword">
                <PredicateGroups>
                    <PredicateGroup Id="DisallowedWhitespaceGroup">
                        <PredicateReferences>
                            <PredicateReference Id="DisallowedWhitespace" />
                        </PredicateReferences>
                    </PredicateGroup>
                    <!-- <PredicateGroup Id="AllowedCharactersGroup">
                                <PredicateReferences>
                                    <PredicateReference Id="AllowedCharacters"/>
                                </PredicateReferences>
                            </PredicateGroup> -->
                    <PredicateGroup Id="LengthGroup">
                        <PredicateReferences>
                            <PredicateReference Id="IsLengthBetween8And64" />
                        </PredicateReferences>
                    </PredicateGroup>
                </PredicateGroups>
            </PredicateValidation>
            <PredicateValidation Id="StrongPassword">
                <PredicateGroups>
                    <PredicateGroup Id="DisallowedWhitespaceGroup">
                        <PredicateReferences>
                            <PredicateReference Id="DisallowedWhitespace" />
                        </PredicateReferences>
                    </PredicateGroup>
                    <!-- <PredicateGroup Id="AllowedCharactersGroup">
                                <PredicateReferences>
                                    <PredicateReference Id="AllowedCharacters"/>
                                </PredicateReferences>
                            </PredicateGroup> -->
                    <PredicateGroup Id="LengthGroup">
                        <PredicateReferences>
                            <PredicateReference Id="IsLengthBetween8And64" />
                        </PredicateReferences>
                    </PredicateGroup>
                    <PredicateGroup Id="CharacterClasses">
                        <UserHelpText>The password must have at least 3 of the following:</UserHelpText>
                        <PredicateReferences MatchAtLeast="3">
                            <PredicateReference Id="Lowercase" />
                            <PredicateReference Id="Uppercase" />
                            <PredicateReference Id="Number" />
                            <PredicateReference Id="Symbol" />
                        </PredicateReferences>
                    </PredicateGroup>
                </PredicateGroups>
            </PredicateValidation>
            <PredicateValidation Id="CustomPassword">
                <PredicateGroups>
                    <PredicateGroup Id="DisallowedWhitespaceGroup">
                        <PredicateReferences>
                            <PredicateReference Id="DisallowedWhitespace" />
                        </PredicateReferences>
                    </PredicateGroup>
                    <!-- <PredicateGroup Id="AllowedCharactersGroup">
                                <PredicateReferences>
                                    <PredicateReference Id="AllowedCharacters"/>
                                </PredicateReferences>
                            </PredicateGroup> -->
                </PredicateGroups>
            </PredicateValidation>
        </PredicateValidations>

        <ClaimsTransformations>

            <ClaimsTransformation Id="GenerateRandomObjectIdTransformation"
                TransformationMethod="CreateRandomString">
                <InputParameters>
                    <InputParameter Id="randomGeneratorType" DataType="string" Value="GUID" />
                </InputParameters>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="objectId"
                        TransformationClaimType="outputClaim" />
                </OutputClaims>
            </ClaimsTransformation>

            <ClaimsTransformation Id="CreateDisplayNameTransformation"
                TransformationMethod="FormatStringMultipleClaims">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="givenName"
                        TransformationClaimType="inputClaim1" />
                    <InputClaim ClaimTypeReferenceId="surname" TransformationClaimType="inputClaim2" />
                </InputClaims>
                <InputParameters>
                    <InputParameter Id="stringFormat" DataType="string" Value="{0} {1}" />
                </InputParameters>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="displayName"
                        TransformationClaimType="outputClaim" />
                </OutputClaims>
            </ClaimsTransformation>

            <ClaimsTransformation Id="CreateMessageTransformation"
                TransformationMethod="FormatStringClaim">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="displayName"
                        TransformationClaimType="inputClaim" />
                </InputClaims>
                <InputParameters>
                    <InputParameter Id="stringFormat" DataType="string" Value="Hello {0}" />
                </InputParameters>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="message"
                        TransformationClaimType="outputClaim" />
                </OutputClaims>
            </ClaimsTransformation>

            <!-- <ClaimsTransformation Id="CreateAlternativeSecurityId"
                TransformationMethod="CreateAlternativeSecurityId">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="issuerUserId"
                        TransformationClaimType="issuerUserId" />
                    <InputClaim ClaimTypeReferenceId="identityProvider"
                        TransformationClaimType="identityProvider" />
                </InputClaims>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="alternativeSecurityId"
                        TransformationClaimType="alternativeSecurityId" />
                </OutputClaims>
            </ClaimsTransformation> -->

            <ClaimsTransformation Id="CheckIfNeedChangePassword" TransformationMethod="CompareClaimToValue">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="status" TransformationClaimType="inputClaim1"/>
                </InputClaims>
                <InputParameters>
                    <InputParameter Id="compareTo" DataType="string" Value="changePassword"/>
                    <InputParameter Id="operator" DataType="string" Value="equal"/>
                    <InputParameter Id="ignoreCase" DataType="string" Value="true"/>
                </InputParameters>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="NeedChangePassword" TransformationClaimType="outputClaim"/>
                </OutputClaims>
            </ClaimsTransformation>
        </ClaimsTransformations>

        <ContentDefinitions>
            <ContentDefinition Id="SelfAssertedContentDefinition">
                <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
                <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
                <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.7</DataUri>
            </ContentDefinition>

            <ContentDefinition Id="api.signuporsignin">
                <LoadUri>~/tenant/templates/AzureBlue/unified.cshtml</LoadUri>
                <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
                <DataUri>urn:com:microsoft:aad:b2c:elements:contract:unifiedssp:2.1.7</DataUri>
                <Metadata>
                    <Item Key="DisplayName">Signin and Signup</Item>
                </Metadata>
            </ContentDefinition>
        </ContentDefinitions>
    </BuildingBlocks>

    <ClaimsProviders>
        <ClaimsProvider>
            <DisplayName>Token Issuer</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="JwtIssuer">
                    <DisplayName>JWT Issuer</DisplayName>
                    <Protocol Name="None" />
                    <OutputTokenFormat>JWT</OutputTokenFormat>
                    <Metadata>
                        <Item Key="client_id">{service:te}</Item>
                        <Item Key="issuer_refresh_token_user_identity_claim_type">objectId</Item>
                        <Item Key="SendTokenResponseBodyWithJsonNumbers">true</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
                        <Key Id="issuer_refresh_token_key"
                            StorageReferenceId="B2C_1A_TokenEncryptionKeyContainer" />
                    </CryptographicKeys>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <!-- The technical profile(s) defined in this section is required by the framework to be
            included in all custom policies. -->
            <DisplayName>Trustframework Policy Engine TechnicalProfiles</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="TpEngine_c3bd4fe2-1775-4013-b91d-35f16d377d13">
                    <DisplayName>Trustframework Policy Engine Default Technical Profile</DisplayName>
                    <Protocol Name="None" />
                    <Metadata>
                        <Item Key="url">{service:te}</Item>
                    </Metadata>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>Technical Profiles to generate claims</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="UserInputMessageClaimGenerator">
                    <DisplayName>User Message Claim Generator Technical Profile</DisplayName>
                    <Protocol Name="Proprietary"
                        Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="message" />
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="CreateMessageTransformation" />
                    </OutputClaimsTransformations>
                </TechnicalProfile>

                <TechnicalProfile Id="UserInputDisplayNameGenerator">
                    <DisplayName>Display Name Claim Generator Technical Profile</DisplayName>
                    <Protocol Name="Proprietary"
                        Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="displayName" />
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="CreateDisplayNameTransformation" />
                    </OutputClaimsTransformations>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>Technical Profiles to collect user's details </DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="passwordCollector">
                    <DisplayName>Collect old and new password input Technical Profile</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
                    <Metadata>
                        <Item Key="ContentDefinitionReferenceId">SelfAssertedContentDefinition</Item>
                    </Metadata>
                    <DisplayClaims>
                        <DisplayClaim ClaimTypeReferenceId="oldPassword" Required="true"/>
                        <DisplayClaim ClaimTypeReferenceId="newPassword" Required="true"/>
                        <DisplayClaim ClaimTypeReferenceId="confirmPassword" Required="true"/>
                    </DisplayClaims>
                    <OutputClaims>        
                        <OutputClaim ClaimTypeReferenceId="passwordUpdated"/>                          
                    </OutputClaims>      
                    <ValidationTechnicalProfiles>                           
                        <ValidationTechnicalProfile ReferenceId="changePasswordViaHttp" />                                  
                    </ValidationTechnicalProfiles>
                </TechnicalProfile>
                <TechnicalProfile Id="LolUsernamePasswordLogin">
                    <DisplayName>Collect User Input Technical Profile</DisplayName>
                    <Protocol Name="Proprietary"
                        Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ContentDefinitionReferenceId">api.signuporsignin</Item>
                        <Item Key="setting.showSignupLink">false</Item>
                        <Item Key="setting.operatingMode">Username</Item>
                        <Item Key="setting.forgotPasswordLinkLocation">None</Item>
                    </Metadata>
                    <DisplayClaims>
                        <DisplayClaim ClaimTypeReferenceId="userName" Required="true" />
                        <DisplayClaim ClaimTypeReferenceId="password" Required="true" />
                    </DisplayClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="userName" />
                        <!-- <OutputClaim ClaimTypeReferenceId="password" /> -->
                        <OutputClaim ClaimTypeReferenceId="givenName" />
                        <OutputClaim ClaimTypeReferenceId="surname" />
                        <OutputClaim ClaimTypeReferenceId="email" />
                        <OutputClaim ClaimTypeReferenceId="status" />
                        <!-- <OutputClaim ClaimTypeReferenceId="displayName" />
                        <OutputClaim ClaimTypeReferenceId="objectId" /> -->
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="CheckIfNeedChangePassword"/>
                    </OutputClaimsTransformations>
                    <ValidationTechnicalProfiles>
                        <ValidationTechnicalProfile ReferenceId="ValidateUserViaHttp" />
                        <!-- <ValidationTechnicalProfile ReferenceId="UserInputDisplayNameGenerator"
                        />
                        <ValidationTechnicalProfile ReferenceId="AAD-UserRead" />
                        <ValidationTechnicalProfile ReferenceId="AAD-UserWrite">
                            <Preconditions>
                                <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
                                    <Value>objectId</Value>
                                    <Action>SkipThisValidationTechnicalProfile</Action>
                                </Precondition>
                            </Preconditions>
                        </ValidationTechnicalProfile> -->
                    </ValidationTechnicalProfiles>
                    <!-- <EnabledForUserJourneys>OnClaimsExistence</EnabledForUserJourneys> -->
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>HTTP Request Technical Profiles</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="ValidateUserViaHttp">
                    <DisplayName>Check that the user has entered a valid user and password</DisplayName>
                    <Protocol Name="Proprietary"
                        Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ServiceUrl">https://mockuserstore-jweng.b4a.run/users</Item>
                        <Item Key="SendClaimsIn">Body</Item>
                        <Item Key="AuthenticationType">None</Item>
                        <Item Key="AllowInsecureAuthInProduction">true</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="userName" PartnerClaimType="user" />
                        <InputClaim ClaimTypeReferenceId="password" PartnerClaimType="password" />
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="givenName" />
                        <OutputClaim ClaimTypeReferenceId="surname" PartnerClaimType="surname" />
                        <OutputClaim ClaimTypeReferenceId="email" PartnerClaimType="email" />
                        <OutputClaim ClaimTypeReferenceId="status" PartnerClaimType="status" />
                    </OutputClaims>
                </TechnicalProfile>
                <TechnicalProfile Id="changePasswordViaHttp">
                    <DisplayName>Call REST API to change/update password</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ServiceUrl">https://mockuserstore-jweng.b4a.run/users/changePassword</Item>
                        <Item Key="SendClaimsIn">Body</Item>
                        <Item Key="AuthenticationType">None</Item>
                        <Item Key="AllowInsecureAuthInProduction">true</Item>                       
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="userName" PartnerClaimType="user"/>
                        <InputClaim ClaimTypeReferenceId="oldPassword" PartnerClaimType="OldPassword"/>
                        <InputClaim ClaimTypeReferenceId="newPassword" PartnerClaimType="newPassword"/>
                    </InputClaims>  
                    <OutputClaims>                             
                        <OutputClaim ClaimTypeReferenceId="passwordUpdated" PartnerClaimType="passwordChange"/>
                    </OutputClaims>                              
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>User Lookup</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="LookupUserViaHttp">
                    <DisplayName>Lookup user from external store</DisplayName>
                    <Protocol Name="Proprietary"
                        Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ServiceUrl">https://mockuserstore-jweng.b4a.run/users/{email}</Item>
                        <Item Key="SendClaimsIn">Url</Item>
                        <Item Key="AuthenticationType">None</Item>
                        <Item Key="AllowInsecureAuthInProduction">true</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="email" />
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="userName" PartnerClaimType="username" />
                        <OutputClaim ClaimTypeReferenceId="givenName" />
                        <OutputClaim ClaimTypeReferenceId="surname" />
                        <OutputClaim ClaimTypeReferenceId="displayName" DefaultValue="Unknown User" />
                        <OutputClaim ClaimTypeReferenceId="email" />
                    </OutputClaims>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>Log claims</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="LogClaims">
                    <DisplayName>Log claims</DisplayName>
                    <Protocol Name="Proprietary"
                        Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ServiceUrl">https://mockuserstore-jweng.b4a.run/log</Item>
                        <Item Key="SendClaimsIn">Body</Item>
                        <Item Key="AuthenticationType">None</Item>
                        <Item Key="AllowInsecureAuthInProduction">true</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="email" />
                        <InputClaim ClaimTypeReferenceId="issuerUserId" />
                        <InputClaim ClaimTypeReferenceId="givenName" />
                        <InputClaim ClaimTypeReferenceId="surname" />
                        <InputClaim ClaimTypeReferenceId="displayName" />
                        <InputClaim ClaimTypeReferenceId="authenticationSource" />
                        <InputClaim ClaimTypeReferenceId="identityProvider" />
                    </InputClaims>
                    <OutputClaims>
                    </OutputClaims>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>Azure AD Technical Profiles</DisplayName>
            <TechnicalProfiles>
                <!--You'll
                add you Azure AD Technical Profiles here-->
                <TechnicalProfile Id="AAD-UserWrite">
                    <DisplayName>Write user information to AAD</DisplayName>
                    <Protocol Name="Proprietary"
                        Handler="Web.TPEngine.Providers.AzureActiveDirectoryProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="Operation">Write</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="userName"
                            PartnerClaimType="signInNames.userName" Required="true" />
                    </InputClaims>
                    <PersistedClaims>
                        <PersistedClaim ClaimTypeReferenceId="userName"
                            PartnerClaimType="signInNames.userName" />
                        <PersistedClaim ClaimTypeReferenceId="displayName" />
                        <PersistedClaim ClaimTypeReferenceId="givenName" />
                        <PersistedClaim ClaimTypeReferenceId="surname" />
                    </PersistedClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectId" />
                        <OutputClaim ClaimTypeReferenceId="userPrincipalName" />
                        <OutputClaim ClaimTypeReferenceId="userName"
                            PartnerClaimType="signInNames.userName" />
                    </OutputClaims>
                </TechnicalProfile>
                <TechnicalProfile Id="AAD-UserRead">
                    <DisplayName>Read user from Azure AD storage</DisplayName>
                    <Protocol Name="Proprietary"
                        Handler="Web.TPEngine.Providers.AzureActiveDirectoryProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="Operation">Read</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">false</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="userName"
                            PartnerClaimType="signInNames.userName" Required="true" />
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectId" />
                        <OutputClaim ClaimTypeReferenceId="userPrincipalName" />
                        <OutputClaim ClaimTypeReferenceId="givenName" />
                        <OutputClaim ClaimTypeReferenceId="surname" />
                        <OutputClaim ClaimTypeReferenceId="displayName" />
                    </OutputClaims>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <Domain>linz</Domain>
            <DisplayName>LINZ AD Login Provider</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="LINZ-Staff-OIDC">
                    <DisplayName>LINZ Employee</DisplayName>
                    <Description>Login with your LINZ AD account</Description>
                    <Protocol Name="OpenIdConnect" />
                    <OutputTokenFormat>JWT</OutputTokenFormat>
                    <Metadata>
                        <!-- <Item
                        Key="METADATA">https://login.microsoftonline.com/tenant-name.onmicrosoft.com/v2.0/.well-known/openid-configuration</Item> -->
                        <Item Key="METADATA">
                            https://login.microsoftonline.com/2134e961-7e38-4c34-a22b-10da5466b725/v2.0/.well-known/openid-configuration</Item>
                        <Item Key="client_id">b2bf66d9-37ad-4537-8e56-cbe2a9861bdb</Item>
                        <Item Key="response_types">code</Item>
                        <Item Key="scope">openid profile email</Item>
                        <!-- <Item Key="response_mode">query</Item> -->
                        <Item Key="response_mode">form_post</Item>
                        <Item Key="HttpBinding">POST</Item>
                        <Item Key="UsePolicyInRedirectUri">false</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="client_secret"
                            StorageReferenceId="B2C_1A_LinzAADLolAuthNonprodClientSecret" />
                    </CryptographicKeys>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="issuerUserId" PartnerClaimType="oid" />
                        <!--
                        <OutputClaim ClaimTypeReferenceId="tenantId" PartnerClaimType="tid"/>
                        <OutputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="given_name" />
                        <OutputClaim ClaimTypeReferenceId="surname" PartnerClaimType="family_name" />
                        <OutputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="name" /> -->
                        <OutputClaim ClaimTypeReferenceId="authenticationSource"
                            DefaultValue="linzAdAuthentication" />
                        <OutputClaim ClaimTypeReferenceId="identityProvider" PartnerClaimType="iss" />
                        <OutputClaim ClaimTypeReferenceId="email" />
                    </OutputClaims>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <!-- <ClaimsProvider>
                <DisplayName>LINZ AD Login Provider</DisplayName>
                <TechnicalProfiles>
                    <TechnicalProfile Id="MSA-OIDC">
                        <DisplayName>LINZ AD Login</DisplayName>
                        <Protocol Name="OpenIdConnect" />
                        <Metadata>
                            <Item Key="client_id">b2bf66d9-37ad-4537-8e56-cbe2a9861bdb</Item>
                            <Item Key="client_secret">qOk8Q~q5NDUAw2ySLJAI_Z3ZdVc8CwP6wfdh5b_u</Item>
                        </Metadata>
                        <OutputClaims>
                            <OutputClaim ClaimTypeReferenceId="identityProvider" />
                            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="socialIdpAuthentication" />
                            <OutputClaim ClaimTypeReferenceId="issuerUserId" PartnerClaimType="sub" />
                            <OutputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="name" />
                            <OutputClaim ClaimTypeReferenceId="email" />
                        </OutputClaims>
                    </TechnicalProfile>
                </TechnicalProfiles>
            </ClaimsProvider> -->
    </ClaimsProviders>

    <UserJourneys>
        <!-- User Journeys Here-->
        <UserJourney Id="ADSignInJourney">
            <OrchestrationSteps>
                <OrchestrationStep Order="1" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="AD" TechnicalProfileReferenceId="LINZ-Staff-OIDC" />
                    </ClaimsExchanges>
                </OrchestrationStep>

                <!-- <OrchestrationStep Order="2" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="Lookup"
                            TechnicalProfileReferenceId="LogClaims" />
                    </ClaimsExchanges>
                </OrchestrationStep> -->

                <OrchestrationStep Order="2" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="Lookup"
                            TechnicalProfileReferenceId="LookupUserViaHttp" />
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="3" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="GenDisplayName"
                            TechnicalProfileReferenceId="UserInputDisplayNameGenerator" />
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="4" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="UpsertLocal"
                            TechnicalProfileReferenceId="AAD-UserWrite" />
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="5" Type="SendClaims"
                    CpimIssuerTechnicalProfileReferenceId="JwtIssuer" />
            </OrchestrationSteps>
        </UserJourney>

        <UserJourney Id="CombinedSignInJourney">
            <OrchestrationSteps>
                <OrchestrationStep Order="1" Type="CombinedSignInAndSignUp"
                    ContentDefinitionReferenceId="api.signuporsignin">
                    <ClaimsProviderSelections>
                        <ClaimsProviderSelection TargetClaimsExchangeId="LinzStaffSignIn" />
                        <ClaimsProviderSelection
                            ValidationClaimsExchangeId="LolPasswordSignIn" />
                    </ClaimsProviderSelections>
                    <ClaimsExchanges>
                        <ClaimsExchange Id="LolPasswordSignIn"
                            TechnicalProfileReferenceId="LolUsernamePasswordLogin" />
                    </ClaimsExchanges>
                </OrchestrationStep>

                <!-- AD login steps -->
                <OrchestrationStep Order="2" Type="ClaimsExchange">
                    <Preconditions>
                        <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
                            <Value>userName</Value>
                            <Action>SkipThisOrchestrationStep</Action>
                        </Precondition>
                    </Preconditions>
                    <ClaimsExchanges>
                        <ClaimsExchange Id="LinzStaffSignIn"
                            TechnicalProfileReferenceId="LINZ-Staff-OIDC" />
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="3" Type="ClaimsExchange">
                    <Preconditions>
                        <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
                            <Value>issuerUserId</Value>
                            <Action>SkipThisOrchestrationStep</Action>
                        </Precondition>
                    </Preconditions>
                    <ClaimsExchanges>
                        <ClaimsExchange Id="Lookup"
                            TechnicalProfileReferenceId="LookupUserViaHttp" />
                    </ClaimsExchanges>
                </OrchestrationStep>
                <!-- END of AD login steps -->


                <!-- Force to change password -->
                <OrchestrationStep Order="4" Type="ClaimsExchange">
                    <Preconditions>
                        <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
                            <Value>status</Value>
                            <Value>changePassword</Value>
                            <Action>SkipThisOrchestrationStep</Action>
                        </Precondition>
                    </Preconditions>
                    <ClaimsExchanges>
                        <ClaimsExchange Id="ChangePasswordClaimsExchange"
                            TechnicalProfileReferenceId="passwordCollector" />
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="5" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="GenDisplayName"
                            TechnicalProfileReferenceId="UserInputDisplayNameGenerator" />
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="6" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="UpsertLocal"
                            TechnicalProfileReferenceId="AAD-UserWrite" />
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="7" Type="SendClaims"
                    CpimIssuerTechnicalProfileReferenceId="JwtIssuer" />
            </OrchestrationSteps>
        </UserJourney>
    </UserJourneys>

    <RelyingParty>
        <!-- 
                Relying Party Here that's your policy’s entry point
                Specify the User Journey to execute 
                Specify the claims to include in the token that is returned when the policy runs
            -->
        <DefaultUserJourney ReferenceId="CombinedSignInJourney" />
        <TechnicalProfile Id="HelloWorldPolicyProfile">
            <DisplayName>Hello World Policy Profile</DisplayName>
            <Protocol Name="OpenIdConnect" />
            <OutputClaims>
                <OutputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="sub" />
                <OutputClaim ClaimTypeReferenceId="userName" PartnerClaimType="id" />
                <OutputClaim ClaimTypeReferenceId="displayName" />
                <OutputClaim ClaimTypeReferenceId="givenName" />
                <OutputClaim ClaimTypeReferenceId="surname" />
                <OutputClaim ClaimTypeReferenceId="email" />
                <OutputClaim ClaimTypeReferenceId="status" />
            </OutputClaims>
            <SubjectNamingInfo ClaimType="sub" />
        </TechnicalProfile>
    </RelyingParty>
</TrustFrameworkPolicy>